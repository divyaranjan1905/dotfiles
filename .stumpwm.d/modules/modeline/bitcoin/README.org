** Usage

Place the following in your =~/.stumpwmrc= file:

#+BEGIN_SRC lisp
  (load-module "bitcoin")
#+END_SRC

Then you can use =%b= in your mode line format:

#+BEGIN_SRC lisp
(setf *screen-mode-line-format*
      (list "[%n]"                      ; Groups
            "%v"                        ; Windows
            "^>"                        ; Push right
            " | %b"                     ; Bitcoin
            " | %d"))                   ; Clock
#+END_SRC

** Notes

Price format is colorized depending on =*modeline-use-colors*=
flag. You can customize setting =t= or =nil= in =~/.stumpwmrc=:

#+BEGIN_SRC lisp
  (setf bitcoin:*modeline-use-colors* t)
#+END_SRC

Colors depends on a comparison between actual value and last values
average:

| Color         | Code    | Description                       |
|---------------+---------+-----------------------------------|
| Bright yellow | =^B^3*= | Price is higher than average      |
| Red           | =^1*=   | Price is below average            |
| White         | =^7*=   | Price is similar to average       |
| Default color | =^**=   | When *modeline-use-colors* is nil |

There is a threshold around average, so the increasing or decreasing
color is only applied if =*threshold*= is passed, can be customized too:

#+BEGIN_SRC lisp
  (setf bitcoin:*threshold* 0.001) ; 0.001 is a 0.1% deviation from average
#+END_SRC

Last values average is calculated over a 3 hours values list
=*values*=, where values are stored on every modeline refresh in a
FIFO fashion.

Get actual price through Coinbase(TM) API, so needs =dexador=, =babel=
and =yason=.

#+BEGIN_SRC lisp
  (ql:quickload '("dexador" "babel" "yason"))
#+END_SRC

Connection to =*url*= price server is limited by a =*time-delay*=
interval, in seconds.  So connection attempts between interval time
are blocked. Interval can be customized too:

#+BEGIN_SRC lisp
  (setf bitcoin:*time-delay* 30) ; seconds
#+END_SRC

The localization format is set by =*local-code*=, when =0= there is no
thousand separator and gives =1234.56=, when =1= the thousand separator
is =#\,= and gives =1,234.56=, when =2= the thousand separator is =#\.=
and gives =1.234,56=, and when =3= the thousand separator is =#\Space=
and gives =1 234,56=. Can be customized too:

#+BEGIN_SRC lisp
  (setf bitcoin:*local-code* 2) ; formatting code to use
#+END_SRC

** Issues

Try to use conditions' =handler-case= machinery to avoid the internet
timeouts or the computer sleeping process, to stuck the modeline.
